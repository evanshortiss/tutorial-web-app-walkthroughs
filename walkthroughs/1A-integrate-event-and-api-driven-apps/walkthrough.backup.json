{
    "dependencies": {
      "repos": [],
      "managedServices": [
        {
          "name": "amq-online-standard"
        },
        {
          "name": "fuse"
        }
      ],
      "serviceInstances": [
        {
          "metadata": {
            "name": "postgresql-persistent"
          },
          "spec": {
            "clusterServiceClassExternalName": "postgresql-persistent",
            "clusterServicePlanExternalName": "default",
            "parameters": {
              "DATABASE_SERVICE_NAME": "orders-db",
              "POSTGRESQL_DATABASE": "orders",
              "POSTGRESQL_USER": "{{ user-username }}",
              "POSTGRESQL_PASSWORD": "password"
            }
          }
        },
        {
          "metadata": {
            "name": "rhmi-lab-nodejs-order-ui"
          },
          "spec": {
            "clusterServiceClassExternalName": "rhmi-lab-nodejs-order-ui",
            "clusterServicePlanExternalName": "default",
            "parameters": {
              "MESSAGING_SERVICE_PASSWORD": "{{ enmasse-credentials-password }}",
              "MESSAGING_SERVICE_USER": "{{ enmasse-credentials-username }}",
              "MESSAGING_SERVICE_HOST": "{{ enmasse-broker-url }}"
            }
          }
        },
        {
          "metadata": {
            "name": "rhmi-lab-fuse-internal-orders-api"
          },
          "spec": {
            "clusterServiceClassExternalName": "rhmi-lab-fuse-internal-orders-api",
            "clusterServicePlanExternalName": "default",
            "parameters": {
              "PG_HOSTNAME": "orders-db.{{ walkthrough-namespace }}.svc",
              "PG_DATABASE": "orders",
              "PG_USERNAME": "{{ user-username }}",
              "PG_PASSWORD": "password"
            }
          }
        },
        {
          "metadata": {
            "name": "rhmi-lab-order-management-ui"
          },
          "spec": {
            "clusterServiceClassExternalName": "rhmi-lab-order-management-ui",
            "clusterServicePlanExternalName": "default",
            "parameters": {
              "ORDERS_API_BASE_URL": "{{ route-orders-fuse-api-host }}"
            }
          }
        }
      ],
      "templates": [
        {
          "apiVersion": "template.openshift.io/v1",
          "kind": "Template",
          "metadata": {
            "name": "fruit-crud-app",
            "annotations": {
              "iconClass": "icon-node",
              "tags": "nodejs, crud",
              "openshift.io/display-name": "Fruit CRUD Application",
              "openshift.io/provider-display-name": "Red Hat, Inc.",
              "openshift.io/documentation-url": "https://github.com/integr8ly/walkthrough-applications.git",
              "description": "Basic CRUD application for fruit"
            }
          },
          "objects": [
            {
              "kind": "DeploymentConfig",
              "apiVersion": "apps.openshift.io/v1",
              "metadata": {
                "name": "crud",
                "labels": {
                  "app": "crud"
                }
              },
              "spec": {
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "test": false,
                "selector": {
                  "app": "crud"
                },
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "crud"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "crud",
                        "image": "quay.io/integreatly/fruit-crud-app:1.0.1",
                        "ports": [
                          {
                            "containerPort": 8080,
                            "protocol": "TCP"
                          }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                      }
                    ],
                    "restartPolicy": "Always",
                    "terminationGracePeriodSeconds": 30,
                    "dnsPolicy": "ClusterFirst",
                    "securityContext": {},
                    "schedulerName": "default-scheduler"
                  }
                }
              }
            },
            {
              "kind": "Service",
              "apiVersion": "v1",
              "metadata": {
                "name": "crud"
              },
              "spec": {
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 8080,
                    "targetPort": 8080
                  }
                ],
                "selector": {
                  "app": "crud"
                }
              }
            },
            {
              "kind": "Route",
              "apiVersion": "route.openshift.io/v1",
              "metadata": {
                "name": "crud"
              },
              "spec": {
                "to": {
                  "kind": "Service",
                  "name": "crud"
                },
                "port": {
                  "targetPort": 8080
                },
                "wildcardPolicy": "None"
              }
            }
          ]
        },
        {
          "apiVersion": "template.openshift.io/v1",
          "kind": "Template",
          "metadata": {
            "name": "nodejs-messaging-work-queue-frontend",
            "annotations": {
              "iconClass": "icon-jboss",
              "tags": "nodejs, microservice, messaging",
              "template.openshift.io/provider-display-name": "Red Hat, Inc.",
              "description": "The Node.js Work Queue Mission demonstrates scalable task processing using messaging"
            }
          },
          "parameters": [
            {
              "name": "MESSAGING_SERVICE_NAME",
              "description": "Name of the messaging service",
              "displayName": "Messaging service name",
              "value": "messaging-service",
              "required": true
            },
            {
              "name": "MESSAGING_SERVICE_HOST",
              "description": "Host of messaging service",
              "displayName": "Messaging service",
              "value": "{{ enmasse-broker-url }}",
              "required": true
            },
            {
              "name": "MESSAGING_SERVICE_PORT",
              "description": "Port used by the messaging service",
              "displayName": "Messaging service port",
              "value": "5672",
              "required": true
            },
            {
              "name": "MESSAGING_SERVICE_USER",
              "description": "User used to log into the messaging service",
              "displayName": "Messaging service user",
              "value": "{{ enmasse-credentials-username }}",
              "required": true
            },
            {
              "name": "MESSAGING_SERVICE_PASSWORD",
              "description": "Password used to log into the messaging service",
              "displayName": "Messaging service password",
              "value": "{{ enmasse-credentials-password  }}",
              "required": true
            }
          ],
          "objects": [
            {
              "apiVersion": "v1",
              "kind": "ConfigMap",
              "metadata": {
                "name": "${MESSAGING_SERVICE_NAME}"
              },
              "data": {
                "MESSAGING_SERVICE_HOST": "${MESSAGING_SERVICE_HOST}",
                "MESSAGING_SERVICE_PORT": "${MESSAGING_SERVICE_PORT}",
                "MESSAGING_SERVICE_USER": "${MESSAGING_SERVICE_USER}",
                "MESSAGING_SERVICE_PASSWORD": "${MESSAGING_SERVICE_PASSWORD}"
              }
            },
            {
              "apiVersion": "v1",
              "kind": "ImageStream",
              "metadata": {
                "name": "nodejs-messaging-work-queue-frontend"
              },
              "spec": {}
            },
            {
              "apiVersion": "v1",
              "kind": "ImageStream",
              "metadata": {
                "name": "runtime-nodejs-messaging-work-queue-frontend"
              },
              "spec": {
                "tags": [
                  {
                    "name": "latest",
                    "from": {
                      "kind": "DockerImage",
                      "name": "bucharestgold/centos7-s2i-nodejs:10.x"
                    }
                  }
                ]
              }
            },
            {
              "apiVersion": "v1",
              "kind": "DeploymentConfig",
              "metadata": {
                "labels": {
                  "app": "nodejs-messaging-work-queue-frontend"
                },
                "name": "nodejs-messaging-work-queue-frontend"
              },
              "spec": {
                "replicas": 1,
                "revisionHistoryLimit": 2,
                "selector": {
                  "app": "nodejs-messaging-work-queue-frontend"
                },
                "strategy": {
                  "rollingParams": {
                    "timeoutSeconds": 3600
                  },
                  "type": "Rolling"
                },
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "nodejs-messaging-work-queue-frontend"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "env": [
                          {
                            "name": "KUBERNETES_NAMESPACE",
                            "valueFrom": {
                              "fieldRef": {
                                "fieldPath": "metadata.namespace"
                              }
                            }
                          }
                        ],
                        "envFrom": [
                          {
                            "configMapRef": {
                              "name": "messaging-service"
                            }
                          }
                        ],
                        "image": "quay.io/integreatly/nodejs-messaging-work-queue:3.0.1",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                          "httpGet": {
                            "path": "/api/health/liveness",
                            "port": 8080,
                            "scheme": "HTTP"
                          },
                          "initialDelaySeconds": 60
                        },
                        "name": "nodejs-messaging-work-queue-frontend",
                        "ports": [
                          {
                            "containerPort": 8080,
                            "name": "http",
                            "protocol": "TCP"
                          }
                        ],
                        "readinessProbe": {
                          "httpGet": {
                            "path": "/api/health/readiness",
                            "port": 8080,
                            "scheme": "HTTP"
                          }
                        },
                        "securityContext": {
                          "privileged": false
                        }
                      }
                    ]
                  }
                },
                "triggers": [
                  {
                    "type": "ConfigChange",
                    "imageChangeParams": {
                      "automatic": true,
                      "containerNames": [
                        "nodejs-messaging-work-queue-frontend"
                      ],
                      "from": {
                        "kind": "ImageStreamTag",
                        "name": "nodejs-messaging-work-queue-frontend:latest"
                      }
                    }
                  }
                ]
              }
            },
            {
              "apiVersion": "v1",
              "kind": "Service",
              "metadata": {
                "labels": {
                  "app": "nodejs-messaging-work-queue-frontend"
                },
                "name": "nodejs-messaging-work-queue-frontend"
              },
              "spec": {
                "ports": [
                  {
                    "name": "http",
                    "port": 8080
                  }
                ],
                "selector": {
                  "app": "nodejs-messaging-work-queue-frontend"
                }
              }
            },
            {
              "apiVersion": "v1",
              "kind": "Route",
              "metadata": {
                "labels": {
                  "app": "nodejs-messaging-work-queue-frontend"
                },
                "name": "frontend"
              },
              "spec": {
                "port": {
                  "targetPort": 8080
                },
                "to": {
                  "kind": "Service",
                  "name": "nodejs-messaging-work-queue-frontend"
                }
              }
            }
          ]
        }
      ]
    }
  }
  